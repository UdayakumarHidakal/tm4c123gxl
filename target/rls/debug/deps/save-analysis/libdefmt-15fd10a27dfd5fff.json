{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1","program":"/home/udayakumar/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","defmt","--edition=2021","/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=15fd10a27dfd5fff","-C","extra-filename=-15fd10a27dfd5fff","--out-dir","/home/udayakumar/RustBosch/tm4c123gxl-rustBoot/rusty/target/rls/debug/deps","-L","dependency=/home/udayakumar/RustBosch/tm4c123gxl-rustBoot/rusty/target/rls/debug/deps","--extern","bitflags=/home/udayakumar/RustBosch/tm4c123gxl-rustBoot/rusty/target/rls/debug/deps/libbitflags-f75283d3dcd3daad.rmeta","--extern","defmt_macros=/home/udayakumar/RustBosch/tm4c123gxl-rustBoot/rusty/target/rls/debug/deps/libdefmt_macros-3648145595ef092d.so","--cap-lints","allow","-L","/home/udayakumar/RustBosch/tm4c123gxl-rustBoot/rusty/target/rls/debug/build/defmt-c3b3c34c4be57e74/out","--error-format=json","--sysroot","/home/udayakumar/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/udayakumar/RustBosch/tm4c123gxl-rustBoot/rusty/target/rls/debug/deps/libdefmt-15fd10a27dfd5fff.rmeta"},"prelude":{"crate_id":{"name":"defmt","disambiguator":[11025702290949511242,0]},"crate_root":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src","external_crates":[{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14787161815832377437,0]}},{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[893260560219503422,0]}},{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14669146228912495263,0]}},{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","num":4,"id":{"name":"bitflags","disambiguator":[50212347008831149,0]}},{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/mod.rs","num":5,"id":{"name":"defmt_macros","disambiguator":[7656687754627961487,0]}}],"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":0,"byte_end":13945,"line_start":1,"line_end":403,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":31161,"byte_end":31162,"line_start":8,"line_end":8,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"u64, usize, i128, i32, u128, u8, i64, u16, isize, i8, i16, u32","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":4,"index":5},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":31182,"byte_end":31190,"line_start":9,"line_end":9,"column_start":19,"column_end":27},"alias_span":null,"name":"bitflags","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":23},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":1939,"byte_end":1946,"line_start":57,"line_end":57,"column_start":15,"column_end":22},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":522},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":1964,"byte_end":1973,"line_start":58,"line_end":58,"column_start":17,"column_end":26},"alias_span":null,"name":"Formatter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":530},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":1975,"byte_end":1978,"line_start":58,"line_end":58,"column_start":28,"column_end":31},"alias_span":null,"name":"Str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":2002,"byte_end":2014,"line_start":59,"line_end":59,"column_start":22,"column_end":34},"alias_span":null,"name":"Debug2Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":2002,"byte_end":2014,"line_start":59,"line_end":59,"column_start":22,"column_end":34},"alias_span":null,"name":"Debug2Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":179},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":2016,"byte_end":2030,"line_start":59,"line_end":59,"column_start":36,"column_end":50},"alias_span":null,"name":"Display2Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":2016,"byte_end":2030,"line_start":59,"line_end":59,"column_start":36,"column_end":50},"alias_span":null,"name":"Display2Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":2046,"byte_end":2052,"line_start":60,"line_end":60,"column_start":14,"column_end":20},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":2054,"byte_end":2060,"line_start":60,"line_end":60,"column_start":22,"column_end":28},"alias_span":null,"name":"Logger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1310},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":2583,"byte_end":2590,"line_start":75,"line_end":75,"column_start":23,"column_end":30},"alias_span":null,"name":"assert","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1312},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":2958,"byte_end":2968,"line_start":84,"line_end":84,"column_start":23,"column_end":33},"alias_span":null,"name":"assert_eq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1314},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":3339,"byte_end":3349,"line_start":93,"line_end":93,"column_start":23,"column_end":33},"alias_span":null,"name":"assert_ne","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1316},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":3729,"byte_end":3742,"line_start":102,"line_end":102,"column_start":23,"column_end":36},"alias_span":null,"name":"debug_assert","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1318},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":4134,"byte_end":4150,"line_start":111,"line_end":111,"column_start":23,"column_end":39},"alias_span":null,"name":"debug_assert_eq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1320},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":4545,"byte_end":4561,"line_start":120,"line_end":120,"column_start":23,"column_end":39},"alias_span":null,"name":"debug_assert_ne","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1346},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":4944,"byte_end":4956,"line_start":129,"line_end":129,"column_start":23,"column_end":35},"alias_span":null,"name":"unreachable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1343},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":5314,"byte_end":5319,"line_start":138,"line_end":138,"column_start":23,"column_end":28},"alias_span":null,"name":"todo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1343},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":5697,"byte_end":5702,"line_start":147,"line_end":147,"column_start":23,"column_end":28},"alias_span":null,"name":"unimplemented","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1340},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":6065,"byte_end":6071,"line_start":156,"line_end":156,"column_start":23,"column_end":29},"alias_span":null,"name":"panic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1349},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":7240,"byte_end":7246,"line_start":191,"line_end":191,"column_start":23,"column_end":29},"alias_span":null,"name":"unwrap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1306},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":7791,"byte_end":7804,"line_start":204,"line_end":204,"column_start":23,"column_end":36},"alias_span":null,"name":"panic_handler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1324},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":8259,"byte_end":8265,"line_start":219,"line_end":219,"column_start":23,"column_end":29},"alias_span":null,"name":"intern","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1328},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":8476,"byte_end":8483,"line_start":226,"line_end":226,"column_start":23,"column_end":30},"alias_span":null,"name":"println","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1332},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":8678,"byte_end":8683,"line_start":233,"line_end":233,"column_start":23,"column_end":28},"alias_span":null,"name":"debug","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1338},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":8877,"byte_end":8882,"line_start":239,"line_end":239,"column_start":23,"column_end":28},"alias_span":null,"name":"error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1334},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":9075,"byte_end":9079,"line_start":245,"line_end":245,"column_start":23,"column_end":27},"alias_span":null,"name":"info","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1330},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":9273,"byte_end":9278,"line_start":251,"line_end":251,"column_start":23,"column_end":28},"alias_span":null,"name":"trace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1336},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":9471,"byte_end":9475,"line_start":257,"line_end":257,"column_start":23,"column_end":27},"alias_span":null,"name":"warn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1322},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":9663,"byte_end":9666,"line_start":262,"line_end":262,"column_start":23,"column_end":26},"alias_span":null,"name":"dbg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1351},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":9782,"byte_end":9787,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1304},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":10493,"byte_end":10506,"line_start":303,"line_end":303,"column_start":23,"column_end":36},"alias_span":null,"name":"global_logger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1355},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":11229,"byte_end":11238,"line_start":323,"line_end":323,"column_start":23,"column_end":32},"alias_span":null,"name":"timestamp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1353},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":12298,"byte_end":12306,"line_start":355,"line_end":355,"column_start":23,"column_end":31},"alias_span":null,"name":"bitflags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1308},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":12390,"byte_end":12396,"line_start":358,"line_end":358,"column_start":23,"column_end":29},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":0,"byte_end":13945,"line_start":1,"line_end":403,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":33},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":335},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"decl_id":null,"docs":" A highly efficient logging framework that targets resource-constrained devices, like\n microcontrollers.","sig":null,"attributes":[{"value":"/ A highly efficient logging framework that targets resource-constrained devices, like","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":0,"byte_end":88,"line_start":1,"line_end":1,"column_start":1,"column_end":89}},{"value":"/ microcontrollers.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":89,"byte_end":110,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":111,"byte_end":114,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Check out the defmt book at <https://defmt.ferrous-systems.com> for more information about how","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":115,"byte_end":213,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ to use it.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":214,"byte_end":228,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":229,"byte_end":232,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Compatibility","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":233,"byte_end":252,"line_start":7,"line_end":7,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":253,"byte_end":256,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The `defmt` wire format might change between major versions. Attempting to read a defmt stream","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":257,"byte_end":355,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"/ with an incompatible version will result in an error. This means that you have to update both","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":356,"byte_end":453,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"/ the host and target side if a breaking change in defmt is released.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":454,"byte_end":525,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"no_std","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":571,"byte_end":577,"line_start":13,"line_end":13,"column_start":45,"column_end":51}},{"value":"warn(missing_docs)","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":761,"byte_end":783,"line_start":16,"line_end":16,"column_start":1,"column_end":23}}]},{"kind":"Static","id":{"krate":0,"index":5},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":1743,"byte_end":1757,"line_start":45,"line_end":45,"column_start":12,"column_end":26},"name":"DEFMT_ENCODING","qualname":"::DEFMT_ENCODING","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"used","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":1374,"byte_end":1381,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"link_section = \".defmt.end\"","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":1490,"byte_end":1517,"line_start":37,"line_end":37,"column_start":38,"column_end":65}},{"value":"export_name = \"_defmt_encoding_ = rzcobs\"","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":1649,"byte_end":1690,"line_start":41,"line_end":41,"column_start":5,"column_end":46}},{"value":"allow(missing_docs)","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":1694,"byte_end":1716,"line_start":43,"line_end":43,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":23},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15824,"byte_end":15831,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoding::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":24}],"decl_id":null,"docs":" Encode raw defmt frames for sending over the wire.","sig":null,"attributes":[{"value":"/ Encode raw defmt frames for sending over the wire.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14315,"byte_end":14369,"line_start":10,"line_end":10,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14370,"byte_end":14373,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ defmt emits \"log frames\", which are sequences of bytes. The raw log frame data","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14374,"byte_end":14456,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ is then *encoded* prior to sending over the wire.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14457,"byte_end":14510,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14511,"byte_end":14514,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Encoder` will encode the frames according to the currently selected","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14515,"byte_end":14587,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ `encoding-*` Cargo feature. See `Cargo.toml` for the supported encodings","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14588,"byte_end":14664,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ and their tradeoffs.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14665,"byte_end":14689,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14690,"byte_end":14693,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Encodings may perform two functions:","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14694,"byte_end":14734,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14735,"byte_end":14738,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - Framing: Adds extra data to allow the encoder to know when each frame starts","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14739,"byte_end":14821,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/ and ends in the stream. Unframed log frames already contain enough information for","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14822,"byte_end":14908,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"/ the decoder to know when they end, so framing is optional. However, without framing","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14909,"byte_end":14996,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/ the decoder must receive all bytes intact or it may \"lose sync\". With framing, it can","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":14997,"byte_end":15086,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"/ recover from missing/corrupted data, and can start decoding from the \"middle\" of an","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15087,"byte_end":15174,"line_start":25,"line_end":25,"column_start":1,"column_end":88}},{"value":"/ already-running stream.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15175,"byte_end":15202,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ - Compression: The frame data has rather low entropy (for example, it contains many","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15203,"byte_end":15290,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ zero bytes due to encoding all integers in fixed with, and will likely contain many","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15291,"byte_end":15378,"line_start":28,"line_end":28,"column_start":1,"column_end":88}},{"value":"/ repetitions). Compression can decrease the on-the-wire required bandwidth.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15379,"byte_end":15457,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15458,"byte_end":15461,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ defmt provides the `Encoder` separately instead of feeding already-encoded bytes","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15462,"byte_end":15546,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ to the `Logger` because `Logger` implementations may decide to allow","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15547,"byte_end":15619,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ concurrent logging from multiple \"contexts\" such as threads or interrupt","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15620,"byte_end":15696,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ priority levels. In this case, the Logger implementation needs to create one","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15697,"byte_end":15777,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ Encoder for each such context.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15778,"byte_end":15812,"line_start":35,"line_end":35,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15928,"byte_end":15931,"line_start":42,"line_end":42,"column_start":18,"column_end":21},"name":"new","qualname":"<Encoder>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Encoder`.\n","sig":null,"attributes":[{"value":"/ Create a new `Encoder`.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15883,"byte_end":15910,"line_start":41,"line_end":41,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16455,"byte_end":16466,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"start_frame","qualname":"<Encoder>::start_frame","value":"pub fn start_frame<impl FnMut(&[u8]): FnMut(&[u8]) ->\n()>(&mut Self, impl FnMut(&[u8]))","parent":null,"children":[],"decl_id":null,"docs":" Start encoding a log frame.","sig":null,"attributes":[{"value":"/ Start encoding a log frame.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16022,"byte_end":16053,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16058,"byte_end":16061,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ `Logger` impls will typically call this from `acquire()`.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16066,"byte_end":16127,"line_start":50,"line_end":50,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16132,"byte_end":16135,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ You may only call `start_frame` when no frame is currently being encoded.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16140,"byte_end":16217,"line_start":52,"line_end":52,"column_start":5,"column_end":82}},{"value":"/ Failure to do so may result in corrupted data on the wire.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16222,"byte_end":16284,"line_start":53,"line_end":53,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16289,"byte_end":16292,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The `write` closure will be called with the encoded data that must","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16297,"byte_end":16367,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ be sent on the wire. It may be called zero, one, or multiple times.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16372,"byte_end":16443,"line_start":56,"line_end":56,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16986,"byte_end":16995,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"end_frame","qualname":"<Encoder>::end_frame","value":"pub fn end_frame<impl FnMut(&[u8]): FnMut(&[u8]) ->\n()>(&mut Self, impl FnMut(&[u8]))","parent":null,"children":[],"decl_id":null,"docs":" Finish encoding a log frame.","sig":null,"attributes":[{"value":"/ Finish encoding a log frame.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16555,"byte_end":16587,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16592,"byte_end":16595,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ `Logger` impls will typically call this from `release()`.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16600,"byte_end":16661,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16666,"byte_end":16669,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ You may only call `end_frame` when a frame is currently being encoded.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16674,"byte_end":16748,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ Failure to do so may result in corrupted data on the wire.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16753,"byte_end":16815,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16820,"byte_end":16823,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ The `write` closure will be called with the encoded data that must","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16828,"byte_end":16898,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ be sent on the wire. It may be called zero, one, or multiple times.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":16903,"byte_end":16974,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":17514,"byte_end":17519,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"name":"write","qualname":"<Encoder>::write","value":"pub fn write<impl FnMut(&[u8]): FnMut(&[u8]) ->\n()>(&mut Self, &[u8], impl FnMut(&[u8]))","parent":null,"children":[],"decl_id":null,"docs":" Write part of data for a log frame.","sig":null,"attributes":[{"value":"/ Write part of data for a log frame.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":17082,"byte_end":17121,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":17126,"byte_end":17129,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ `Logger` impls will typically call this from `write()`.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":17134,"byte_end":17193,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":17198,"byte_end":17201,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ You may only call `write` when a frame is currently being encoded.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":17206,"byte_end":17276,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ Failure to do so may result in corrupted data on the wire.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":17281,"byte_end":17343,"line_start":79,"line_end":79,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":17348,"byte_end":17351,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ The `write` closure will be called with the encoded data that must","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":17356,"byte_end":17426,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ be sent on the wire. It may be called zero, one, or multiple times.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":17431,"byte_end":17502,"line_start":82,"line_end":82,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":33},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"export","qualname":"::export","value":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":39},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":141}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":468},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36201,"byte_end":36203,"line_start":12,"line_end":12,"column_start":20,"column_end":22},"name":"u8","qualname":"::export::integers::u8","value":"pub fn u8(&u8)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36070,"byte_end":36095,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":469},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36205,"byte_end":36208,"line_start":12,"line_end":12,"column_start":24,"column_end":27},"name":"u16","qualname":"::export::integers::u16","value":"pub fn u16(&u16)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36070,"byte_end":36095,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":470},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36210,"byte_end":36213,"line_start":12,"line_end":12,"column_start":29,"column_end":32},"name":"u32","qualname":"::export::integers::u32","value":"pub fn u32(&u32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36070,"byte_end":36095,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":471},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36215,"byte_end":36218,"line_start":12,"line_end":12,"column_start":34,"column_end":37},"name":"u64","qualname":"::export::integers::u64","value":"pub fn u64(&u64)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36070,"byte_end":36095,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":472},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36220,"byte_end":36224,"line_start":12,"line_end":12,"column_start":39,"column_end":43},"name":"u128","qualname":"::export::integers::u128","value":"pub fn u128(&u128)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36070,"byte_end":36095,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":473},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36226,"byte_end":36228,"line_start":12,"line_end":12,"column_start":45,"column_end":47},"name":"i8","qualname":"::export::integers::i8","value":"pub fn i8(&i8)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36070,"byte_end":36095,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":474},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36230,"byte_end":36233,"line_start":12,"line_end":12,"column_start":49,"column_end":52},"name":"i16","qualname":"::export::integers::i16","value":"pub fn i16(&i16)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36070,"byte_end":36095,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":475},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36235,"byte_end":36238,"line_start":12,"line_end":12,"column_start":54,"column_end":57},"name":"i32","qualname":"::export::integers::i32","value":"pub fn i32(&i32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36070,"byte_end":36095,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":476},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36240,"byte_end":36243,"line_start":12,"line_end":12,"column_start":59,"column_end":62},"name":"i64","qualname":"::export::integers::i64","value":"pub fn i64(&i64)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36070,"byte_end":36095,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":477},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36245,"byte_end":36249,"line_start":12,"line_end":12,"column_start":64,"column_end":68},"name":"i128","qualname":"::export::integers::i128","value":"pub fn i128(&i128)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36070,"byte_end":36095,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36286,"byte_end":36291,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"usize","qualname":"::export::integers::usize","value":"pub fn usize(&usize)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36253,"byte_end":36278,"line_start":14,"line_end":14,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36379,"byte_end":36384,"line_start":20,"line_end":20,"column_start":8,"column_end":13},"name":"isize","qualname":"::export::integers::isize","value":"pub fn isize(&isize)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/integers.rs","byte_start":36346,"byte_end":36371,"line_start":19,"line_end":19,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":36532,"byte_end":36540,"line_start":5,"line_end":5,"column_start":11,"column_end":19},"name":"Truncate","qualname":"::export::traits::Truncate","value":"Truncate<U>","parent":null,"children":[{"krate":0,"index":55}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":36553,"byte_end":36561,"line_start":6,"line_end":6,"column_start":8,"column_end":16},"name":"truncate","qualname":"::export::traits::Truncate::truncate","value":"pub fn truncate(Self) -> U","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":508},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37240,"byte_end":37249,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"NoneError","qualname":"::export::traits::NoneError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":61},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37578,"byte_end":37588,"line_start":58,"line_end":58,"column_start":11,"column_end":21},"name":"IntoResult","qualname":"::export::traits::IntoResult","value":"IntoResult","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":" Transform `self` into a `Result`","sig":null,"attributes":[{"value":"/ Transform `self` into a `Result`","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37485,"byte_end":37521,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37522,"byte_end":37525,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Call sites","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37526,"byte_end":37542,"line_start":56,"line_end":56,"column_start":1,"column_end":17}},{"value":"/ * [`defmt::unwrap!`]","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37543,"byte_end":37567,"line_start":57,"line_end":57,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":62},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37600,"byte_end":37602,"line_start":59,"line_end":59,"column_start":10,"column_end":12},"name":"Ok","qualname":"::export::traits::IntoResult::Ok","value":"type Ok;","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":63},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37613,"byte_end":37618,"line_start":60,"line_end":60,"column_start":10,"column_end":15},"name":"Error","qualname":"::export::traits::IntoResult::Error","value":"type Error;","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37627,"byte_end":37638,"line_start":61,"line_end":61,"column_start":8,"column_end":19},"name":"into_result","qualname":"::export::traits::IntoResult::into_result","value":"pub fn into_result(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":93},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":31203,"byte_end":31214,"line_start":11,"line_end":11,"column_start":11,"column_end":22},"name":"UnsignedInt","qualname":"::export::UnsignedInt","value":"UnsignedInt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":32426,"byte_end":32433,"line_start":51,"line_end":51,"column_start":15,"column_end":22},"name":"acquire","qualname":"::export::acquire","value":"pub unsafe fn acquire()","parent":null,"children":[],"decl_id":null,"docs":" Only to be used by the defmt macros\n Safety: must be paired with a later call to release()\n","sig":null,"attributes":[{"value":"/ Only to be used by the defmt macros","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":32257,"byte_end":32296,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ Safety: must be paired with a later call to release()","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":32297,"byte_end":32354,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"cfg(not(feature = \"unstable-test\"))","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":32355,"byte_end":32393,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"inline(always)","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":32394,"byte_end":32411,"line_start":50,"line_end":50,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":102},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":32836,"byte_end":32843,"line_start":67,"line_end":67,"column_start":15,"column_end":22},"name":"release","qualname":"::export::release","value":"pub unsafe fn release()","parent":null,"children":[],"decl_id":null,"docs":" Only to be used by the defmt macros\n Safety: must follow an earlier call to acquire()\n","sig":null,"attributes":[{"value":"/ Only to be used by the defmt macros","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":32672,"byte_end":32711,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ Safety: must follow an earlier call to acquire()","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":32712,"byte_end":32764,"line_start":64,"line_end":64,"column_start":1,"column_end":53}},{"value":"cfg(not(feature = \"unstable-test\"))","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":32765,"byte_end":32803,"line_start":65,"line_end":65,"column_start":1,"column_end":39}},{"value":"inline(always)","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":32804,"byte_end":32821,"line_start":66,"line_end":66,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":33106,"byte_end":33111,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"write","qualname":"::export::write","value":"pub fn write(&[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"unstable-test\"))","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":33042,"byte_end":33080,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"inline(always)","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":33081,"byte_end":33098,"line_start":80,"line_end":80,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":33403,"byte_end":33412,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"timestamp","qualname":"::export::timestamp","value":"pub fn timestamp(crate::Formatter)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"unstable-test\"))","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":33339,"byte_end":33377,"line_start":92,"line_end":92,"column_start":1,"column_end":39}},{"value":"inline(always)","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":33378,"byte_end":33395,"line_start":93,"line_end":93,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":111},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":33615,"byte_end":33624,"line_start":102,"line_end":102,"column_start":8,"column_end":17},"name":"make_istr","qualname":"::export::make_istr","value":"pub fn make_istr(u16) -> Str","parent":null,"children":[],"decl_id":null,"docs":" Returns the interned string at `address`.\n","sig":null,"attributes":[{"value":"/ Returns the interned string at `address`.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":33562,"byte_end":33607,"line_start":101,"line_end":101,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":33702,"byte_end":33716,"line_start":107,"line_end":107,"column_start":8,"column_end":22},"name":"make_formatter","qualname":"::export::make_formatter","value":"pub fn make_formatter<'a>() -> Formatter","parent":null,"children":[],"decl_id":null,"docs":" Create a Formatter.\n","sig":null,"attributes":[{"value":"/ Create a Formatter.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":33671,"byte_end":33694,"line_start":106,"line_end":106,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":114},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":33819,"byte_end":33827,"line_start":113,"line_end":113,"column_start":8,"column_end":16},"name":"truncate","qualname":"::export::truncate","value":"pub fn truncate<T,\nimpl traits::Truncate<T>: traits::Truncate<T>>(impl traits::Truncate<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":33894,"byte_end":33905,"line_start":117,"line_end":117,"column_start":8,"column_end":19},"name":"into_result","qualname":"::export::into_result","value":"pub fn into_result<T: traits::IntoResult>(T) -> Result<T::Ok, T::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":119},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34148,"byte_end":34153,"line_start":129,"line_end":129,"column_start":8,"column_end":13},"name":"panic","qualname":"::export::panic","value":"pub fn panic() -> !","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"unstable-test\"))","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34084,"byte_end":34122,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"inline(always)","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34123,"byte_end":34140,"line_start":128,"line_end":128,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":122},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34287,"byte_end":34290,"line_start":137,"line_end":137,"column_start":8,"column_end":11},"name":"fmt","qualname":"::export::fmt","value":"pub fn fmt<T: Format + ?Sized>(&T)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34254,"byte_end":34279,"line_start":136,"line_end":136,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":124},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34407,"byte_end":34416,"line_start":143,"line_end":143,"column_start":8,"column_end":17},"name":"fmt_slice","qualname":"::export::fmt_slice","value":"pub fn fmt_slice<T: Format>(&[T])","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34374,"byte_end":34399,"line_start":142,"line_end":142,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":126},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34597,"byte_end":34600,"line_start":152,"line_end":152,"column_start":8,"column_end":11},"name":"f32","qualname":"::export::f32","value":"pub fn f32(&f32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34564,"byte_end":34589,"line_start":151,"line_end":151,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34691,"byte_end":34694,"line_start":157,"line_end":157,"column_start":8,"column_end":11},"name":"f64","qualname":"::export::f64","value":"pub fn f64(&f64)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34658,"byte_end":34683,"line_start":156,"line_end":156,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34785,"byte_end":34789,"line_start":162,"line_end":162,"column_start":8,"column_end":12},"name":"char","qualname":"::export::char","value":"pub fn char(&char)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34752,"byte_end":34777,"line_start":161,"line_end":161,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":129},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34850,"byte_end":34853,"line_start":166,"line_end":166,"column_start":8,"column_end":11},"name":"str","qualname":"::export::str","value":"pub fn str(&str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":34921,"byte_end":34926,"line_start":171,"line_end":171,"column_start":8,"column_end":13},"name":"slice","qualname":"::export::slice","value":"pub fn slice(&[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":131},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35053,"byte_end":35061,"line_start":177,"line_end":177,"column_start":8,"column_end":16},"name":"u8_array","qualname":"::export::u8_array","value":"pub fn u8_array(&[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35167,"byte_end":35176,"line_start":182,"line_end":182,"column_start":8,"column_end":17},"name":"fmt_array","qualname":"::export::fmt_array","value":"pub fn fmt_array<T: Format>(&[T])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35321,"byte_end":35325,"line_start":190,"line_end":190,"column_start":8,"column_end":12},"name":"istr","qualname":"::export::istr","value":"pub fn istr(&Str)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35288,"byte_end":35313,"line_start":189,"line_end":189,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":135},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35409,"byte_end":35413,"line_start":195,"line_end":195,"column_start":8,"column_end":12},"name":"bool","qualname":"::export::bool","value":"pub fn bool(&bool)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35376,"byte_end":35401,"line_start":194,"line_end":194,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35483,"byte_end":35488,"line_start":200,"line_end":200,"column_start":8,"column_end":13},"name":"debug","qualname":"::export::debug","value":"pub fn debug(&dyn core::fmt::Debug)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35450,"byte_end":35475,"line_start":199,"line_end":199,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35621,"byte_end":35628,"line_start":206,"line_end":206,"column_start":8,"column_end":15},"name":"display","qualname":"::export::display","value":"pub fn display(&dyn core::fmt::Display)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35588,"byte_end":35613,"line_start":205,"line_end":205,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":138},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35752,"byte_end":35758,"line_start":212,"line_end":212,"column_start":8,"column_end":14},"name":"header","qualname":"::export::header","value":"pub fn header(&Str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35728,"byte_end":35744,"line_start":211,"line_end":211,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":522},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/formatter.rs","byte_start":38113,"byte_end":38122,"line_start":5,"line_end":5,"column_start":12,"column_end":21},"name":"Formatter","qualname":"::formatter::Formatter","value":"Formatter {  }","parent":null,"children":[{"krate":0,"index":524}],"decl_id":null,"docs":" Handle to a defmt logger.\n","sig":null,"attributes":[{"value":"/ Handle to a defmt logger.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/formatter.rs","byte_start":38049,"byte_end":38078,"line_start":3,"line_end":3,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":530},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/formatter.rs","byte_start":38299,"byte_end":38302,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"Str","qualname":"::formatter::Str","value":"Str {  }","parent":null,"children":[{"krate":0,"index":531}],"decl_id":null,"docs":" An interned string created via [`intern!`].","sig":null,"attributes":[{"value":"/ An interned string created via [`intern!`].","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/formatter.rs","byte_start":38178,"byte_end":38225,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/formatter.rs","byte_start":38226,"byte_end":38229,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`intern!`]: macro.intern.html","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/formatter.rs","byte_start":38230,"byte_end":38264,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":170},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40024,"byte_end":40036,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"Debug2Format","qualname":"::impls::adapter::Debug2Format","value":"","parent":null,"children":[],"decl_id":null,"docs":" An \"adapter\" type to feed `Debug` values into defmt macros, which expect `defmt::Format` values.","sig":null,"attributes":[{"value":"/ An \"adapter\" type to feed `Debug` values into defmt macros, which expect `defmt::Format` values.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39264,"byte_end":39364,"line_start":6,"line_end":6,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39365,"byte_end":39368,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This adapter disables compression and uses the `core::fmt` code on-device! You should prefer","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39369,"byte_end":39465,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ `defmt::Format` over `Debug` whenever possible.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39466,"byte_end":39517,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39518,"byte_end":39521,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39522,"byte_end":39536,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39537,"byte_end":39540,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39541,"byte_end":39552,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39553,"byte_end":39575,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ # struct ExpensiveThing();","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39576,"byte_end":39606,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ # let expensive_thing = ExpensiveThing();","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39607,"byte_end":39652,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39653,"byte_end":39658,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ defmt::info!(\"{:?}\", defmt::Debug2Format(&expensive_thing));","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39659,"byte_end":39723,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ //                                        ˆˆˆˆˆˆˆˆˆˆˆˆˆˆˆ","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39724,"byte_end":39800,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ //                                        must `#[derive(Debug)]`","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39801,"byte_end":39870,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39871,"byte_end":39878,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39879,"byte_end":39882,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Note that any provided defmt display hints will be ignored","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39883,"byte_end":39945,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/ because this always uses `{:?}` to format the contained value.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":39946,"byte_end":40012,"line_start":24,"line_end":24,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":174},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40065,"byte_end":40074,"line_start":25,"line_end":25,"column_start":53,"column_end":62},"name":"0","qualname":"::impls::adapter::Debug2Format::0","value":"&'a T","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":179},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":41268,"byte_end":41282,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"Display2Format","qualname":"::impls::adapter::Display2Format","value":"","parent":null,"children":[],"decl_id":null,"docs":" An \"adapter\" type to feed `Display` values into defmt macros, which expect `defmt::Format` values.","sig":null,"attributes":[{"value":"/ An \"adapter\" type to feed `Display` values into defmt macros, which expect `defmt::Format` values.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40325,"byte_end":40427,"line_start":39,"line_end":39,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40428,"byte_end":40431,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This adapter disables compression and uses the `core::fmt` code on-device! You should prefer","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40432,"byte_end":40528,"line_start":41,"line_end":41,"column_start":1,"column_end":97}},{"value":"/ `defmt::Format` over `Display` whenever possible.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40529,"byte_end":40582,"line_start":42,"line_end":42,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40583,"byte_end":40586,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40587,"byte_end":40601,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40602,"byte_end":40605,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40606,"byte_end":40617,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/ # struct ExpensiveThing();","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40618,"byte_end":40648,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40649,"byte_end":40654,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # impl core::fmt::Display for ExpensiveThing {","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40655,"byte_end":40705,"line_start":49,"line_end":49,"column_start":1,"column_end":51}},{"value":"/ #     fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40706,"byte_end":40782,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ #         write!(f, \"{}\", \"expensive\")","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40783,"byte_end":40825,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/ #     }","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40826,"byte_end":40837,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/ #  }","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40838,"byte_end":40846,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ # let expensive_thing = ExpensiveThing();","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40847,"byte_end":40892,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40893,"byte_end":40898,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ defmt::info!(\"{}\", defmt::Display2Format(&expensive_thing));","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40899,"byte_end":40963,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ //                                        ˆˆˆˆˆˆˆˆˆˆˆˆˆˆˆ","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40964,"byte_end":41040,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/ //                                        must implement `fmt::Display`","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":41041,"byte_end":41116,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":41117,"byte_end":41124,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":41125,"byte_end":41128,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note that any provided defmt display hints will be ignored","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":41129,"byte_end":41191,"line_start":61,"line_end":61,"column_start":1,"column_end":63}},{"value":"/ because this always uses `{}` to format the contained value.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":41192,"byte_end":41256,"line_start":62,"line_end":62,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":183},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":41313,"byte_end":41322,"line_start":63,"line_end":63,"column_start":57,"column_end":66},"name":"0","qualname":"::impls::adapter::Display2Format::0","value":"&'a T","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":352},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55426,"byte_end":55432,"line_start":45,"line_end":45,"column_start":11,"column_end":17},"name":"Format","qualname":"::traits::Format","value":"Format","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355}],"decl_id":null,"docs":" Trait for types that can be formatted via defmt.","sig":null,"attributes":[{"value":"/ Trait for types that can be formatted via defmt.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54371,"byte_end":54423,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54424,"byte_end":54427,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is used by the `{:?}` format specifier and can format a wide range of types.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54428,"byte_end":54519,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/ User-defined types can `#[derive(Format)]` to get an auto-generated implementation of this","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54520,"byte_end":54614,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ trait.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54615,"byte_end":54625,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54626,"byte_end":54629,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ **Note**: The implementation of `#[derive(Format)]` assumes that no builtin types are shadowed","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54630,"byte_end":54728,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ (for example by defining a `struct u8;`). This allows it to represent them more compactly.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54729,"byte_end":54823,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54824,"byte_end":54827,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54828,"byte_end":54841,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54842,"byte_end":54845,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Usually, an implementation of this trait can be `#[derive]`d automatically:","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54846,"byte_end":54925,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54926,"byte_end":54929,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54930,"byte_end":54937,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use defmt::Format;","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54938,"byte_end":54960,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54961,"byte_end":54964,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ #[derive(Format)]","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54965,"byte_end":54986,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/ struct Header {","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":54987,"byte_end":55006,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"/     source: u8,","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55007,"byte_end":55026,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/     destination: u8,","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55027,"byte_end":55051,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/     sequence: u16,","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55052,"byte_end":55074,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55075,"byte_end":55080,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55081,"byte_end":55088,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55089,"byte_end":55092,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Manual implementations can make use of the [`write!`] macro:","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55093,"byte_end":55157,"line_start":31,"line_end":31,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55158,"byte_end":55161,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55162,"byte_end":55169,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use defmt::{Format, Formatter, write};","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55170,"byte_end":55212,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55213,"byte_end":55216,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ struct Id(u32);","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55217,"byte_end":55236,"line_start":36,"line_end":36,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55237,"byte_end":55240,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ impl Format for Id {","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55241,"byte_end":55265,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/     fn format(&self, fmt: Formatter) {","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55266,"byte_end":55308,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/         // Format as hexadecimal.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55309,"byte_end":55346,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/         write!(fmt, \"Id({:x})\", self.0);","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55347,"byte_end":55391,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55392,"byte_end":55401,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55402,"byte_end":55407,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55408,"byte_end":55415,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55502,"byte_end":55508,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"format","qualname":"::traits::Format::format","value":"pub fn format(&Self, Formatter)","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Writes the defmt representation of `self` to `fmt`.\n","sig":null,"attributes":[{"value":"/ Writes the defmt representation of `self` to `fmt`.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55439,"byte_end":55494,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55560,"byte_end":55571,"line_start":50,"line_end":50,"column_start":8,"column_end":19},"name":"_format_tag","qualname":"::traits::Format::_format_tag","value":"pub fn _format_tag() -> Str","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55665,"byte_end":55677,"line_start":55,"line_end":55,"column_start":8,"column_end":20},"name":"_format_data","qualname":"::traits::Format::_format_data","value":"pub fn _format_data(&Self)","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":356},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57254,"byte_end":57260,"line_start":89,"line_end":89,"column_start":18,"column_end":24},"name":"Logger","qualname":"::traits::Logger","value":"Logger","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"decl_id":null,"docs":" Global logger acquire-release mechanism","sig":null,"attributes":[{"value":"/ Global logger acquire-release mechanism","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55782,"byte_end":55825,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55826,"byte_end":55829,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This trait's methods will be called by the defmt logging macros to transmit the","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55830,"byte_end":55913,"line_start":63,"line_end":63,"column_start":1,"column_end":84}},{"value":"/ encoded log data over the wire. The call order is:","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55914,"byte_end":55968,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/ - One `acquire()` call to start the log frame.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":55969,"byte_end":56019,"line_start":65,"line_end":65,"column_start":1,"column_end":51}},{"value":"/ - Multiple `write()` calls, with fragments of the log frame data each.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56020,"byte_end":56094,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ - One `release()` call.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56095,"byte_end":56122,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56123,"byte_end":56126,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The data passed to `write()` is *unencoded*. Implementations MUST encode it with `Encoder`","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56127,"byte_end":56221,"line_start":69,"line_end":69,"column_start":1,"column_end":95}},{"value":"/ prior to sending it over the wire. The simplest way is for `acquire()` to call `Encoder::start_frame()`,","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56222,"byte_end":56330,"line_start":70,"line_end":70,"column_start":1,"column_end":109}},{"value":"/ `write()` to call `Encoder::write()`, and `release()` to call `Encoder::end_frame()`.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56331,"byte_end":56420,"line_start":71,"line_end":71,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56421,"byte_end":56424,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The global logger can be acquired once for each \"execution context\". The definition","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56425,"byte_end":56512,"line_start":73,"line_end":73,"column_start":1,"column_end":88}},{"value":"/ of execution context is up to the implementation. For example, it can be:","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56513,"byte_end":56590,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56591,"byte_end":56594,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ - the entire process.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56595,"byte_end":56620,"line_start":76,"line_end":76,"column_start":1,"column_end":26}},{"value":"/ - one thread in std environments.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56621,"byte_end":56658,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"/ - one interrupt priority level in embedded devices.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56659,"byte_end":56714,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56715,"byte_end":56718,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Safety contract","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56719,"byte_end":56740,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56741,"byte_end":56744,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ - `acquire` logically acquires the global logger in the current execution context.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56745,"byte_end":56831,"line_start":82,"line_end":82,"column_start":1,"column_end":87}},{"value":"/   The acquiring is tracked internally, no Rust object is returned representing ownership.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56832,"byte_end":56925,"line_start":83,"line_end":83,"column_start":1,"column_end":94}},{"value":"/ - `acquire` is a safe function, therefore it must be thread-safe and interrupt-safe","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":56926,"byte_end":57013,"line_start":84,"line_end":84,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57014,"byte_end":57017,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ And, not safety related, the methods should never be invoked from user code. The easiest way to","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57018,"byte_end":57117,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/ ensure this is to implement `Logger` on a *private* `struct` and mark that `struct` as the","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57118,"byte_end":57212,"line_start":87,"line_end":87,"column_start":1,"column_end":95}},{"value":"/ `#[global_logger]`.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57213,"byte_end":57236,"line_start":88,"line_end":88,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57540,"byte_end":57547,"line_start":95,"line_end":95,"column_start":8,"column_end":15},"name":"acquire","qualname":"::traits::Logger::acquire","value":"pub fn acquire()","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" Acquire the global logger in the current execution context.","sig":null,"attributes":[{"value":"/ Acquire the global logger in the current execution context.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57267,"byte_end":57330,"line_start":90,"line_end":90,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57335,"byte_end":57338,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This will be called by the defmt logging macros before writing each log frame.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57343,"byte_end":57425,"line_start":92,"line_end":92,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57430,"byte_end":57433,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Panics if already acquired in the current execution context. Otherwise it must never fail.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57438,"byte_end":57532,"line_start":94,"line_end":94,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57910,"byte_end":57915,"line_start":104,"line_end":104,"column_start":15,"column_end":20},"name":"flush","qualname":"::traits::Logger::flush","value":"pub unsafe fn flush()","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" Block until host has read all pending data.","sig":null,"attributes":[{"value":"/ Block until host has read all pending data.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57556,"byte_end":57603,"line_start":97,"line_end":97,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57608,"byte_end":57611,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The flush operation must not fail. This is a \"best effort\" operation, I/O errors should be discarded.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57616,"byte_end":57721,"line_start":99,"line_end":99,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57726,"byte_end":57729,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57734,"byte_end":57746,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/ Must only be called when the global logger is acquired in the current execution context.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57751,"byte_end":57843,"line_start":102,"line_end":102,"column_start":5,"column_end":97}},{"value":"/ (i.e. between `acquire()` and `release()`).","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57848,"byte_end":57895,"line_start":103,"line_end":103,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58209,"byte_end":58216,"line_start":112,"line_end":112,"column_start":15,"column_end":22},"name":"release","qualname":"::traits::Logger::release","value":"pub unsafe fn release()","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" Releases the global logger in the current execution context.","sig":null,"attributes":[{"value":"/ Releases the global logger in the current execution context.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57924,"byte_end":57988,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":57993,"byte_end":57996,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This will be called by the defmt logging macros after writing each log frame.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58001,"byte_end":58082,"line_start":108,"line_end":108,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58087,"byte_end":58090,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58095,"byte_end":58107,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/ Must be called exactly once for each acquire(), in the same execution context.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58112,"byte_end":58194,"line_start":111,"line_end":111,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":59032,"byte_end":59037,"line_start":129,"line_end":129,"column_start":15,"column_end":20},"name":"write","qualname":"::traits::Logger::write","value":"pub unsafe fn write(&[u8])","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" Writes `bytes` to the destination.","sig":null,"attributes":[{"value":"/ Writes `bytes` to the destination.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58225,"byte_end":58263,"line_start":114,"line_end":114,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58268,"byte_end":58271,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This will be called by the defmt logging macros to transmit frame data. One log frame may cause multiple `write` calls.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58276,"byte_end":58399,"line_start":116,"line_end":116,"column_start":5,"column_end":128}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58404,"byte_end":58407,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The write operation must not fail. This is a \"best effort\" operation, I/O errors should be discarded.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58412,"byte_end":58517,"line_start":118,"line_end":118,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58522,"byte_end":58525,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The `bytes` are unencoded log frame data, they MUST be encoded with `Encoder` prior to","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58530,"byte_end":58620,"line_start":120,"line_end":120,"column_start":5,"column_end":95}},{"value":"/ sending over the wire.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58625,"byte_end":58651,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58656,"byte_end":58659,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Note that a call to `write` does *not* correspond to a defmt logging macro invocation. A","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58664,"byte_end":58756,"line_start":123,"line_end":123,"column_start":5,"column_end":97}},{"value":"/ single `defmt::info!` call can result in an arbitrary number of `write` calls.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58761,"byte_end":58843,"line_start":124,"line_end":124,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58848,"byte_end":58851,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58856,"byte_end":58868,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/ Must only be called when the global logger is acquired in the current execution context.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58873,"byte_end":58965,"line_start":127,"line_end":127,"column_start":5,"column_end":97}},{"value":"/ (i.e. between `acquire()` and `release()`).","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/traits.rs","byte_start":58970,"byte_end":59017,"line_start":128,"line_end":128,"column_start":5,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":463},"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":13129,"byte_end":13134,"line_start":377,"line_end":377,"column_start":8,"column_end":13},"name":"flush","qualname":"::flush","value":"pub fn flush()","parent":null,"children":[],"decl_id":null,"docs":" Block until host has read all pending data.","sig":null,"attributes":[{"value":"/ Block until host has read all pending data.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":12713,"byte_end":12760,"line_start":370,"line_end":370,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":12761,"byte_end":12764,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ The flush operation will not fail, but might not succeed in flushing _all_ pending data. It is","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":12765,"byte_end":12863,"line_start":372,"line_end":372,"column_start":1,"column_end":99}},{"value":"/ implemented as a \"best effort\" operation.","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":12864,"byte_end":12909,"line_start":373,"line_end":373,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":12910,"byte_end":12913,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ This calls the method `flush` of the used \"global [`Logger`]\". The logger is likely provided by","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":12914,"byte_end":13013,"line_start":375,"line_end":375,"column_start":1,"column_end":100}},{"value":"/ [`defmt-rtt`](https://crates.io/crates/defmt-rtt) or [`defmt-itm`](https://crates.io/crates/defmt-itm).","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":13014,"byte_end":13121,"line_start":376,"line_end":376,"column_start":1,"column_end":108}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/rzcobs.rs","byte_start":18114,"byte_end":18121,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15869,"byte_end":15876,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37268,"byte_end":37277,"line_start":42,"line_end":42,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37705,"byte_end":37711,"line_start":64,"line_end":64,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37893,"byte_end":37899,"line_start":74,"line_end":74,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35863,"byte_end":35871,"line_start":219,"line_end":219,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40118,"byte_end":40130,"line_start":27,"line_end":27,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":41368,"byte_end":41382,"line_start":65,"line_end":65,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/alloc_.rs","byte_start":46353,"byte_end":46359,"line_start":5,"line_end":5,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/array.rs","byte_start":46615,"byte_end":46632,"line_start":5,"line_end":5,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/cell.rs","byte_start":46782,"byte_end":46786,"line_start":3,"line_end":3,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/cell.rs","byte_start":46965,"byte_end":46972,"line_start":12,"line_end":12,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/cell.rs","byte_start":47465,"byte_end":47476,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/cell.rs","byte_start":47597,"byte_end":47611,"line_start":42,"line_end":42,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/num.rs","byte_start":48451,"byte_end":48466,"line_start":28,"line_end":28,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/ops.rs","byte_start":48615,"byte_end":48620,"line_start":3,"line_end":3,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/ops.rs","byte_start":48790,"byte_end":48799,"line_start":12,"line_end":12,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/ops.rs","byte_start":48952,"byte_end":48961,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/ops.rs","byte_start":49078,"byte_end":49092,"line_start":27,"line_end":27,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/ops.rs","byte_start":49267,"byte_end":49274,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/ops.rs","byte_start":49430,"byte_end":49446,"line_start":45,"line_end":45,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/slice.rs","byte_start":49626,"byte_end":49637,"line_start":3,"line_end":3,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/slice.rs","byte_start":49802,"byte_end":49806,"line_start":12,"line_end":12,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/slice.rs","byte_start":50056,"byte_end":50063,"line_start":25,"line_end":25,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/mod.rs","byte_start":44461,"byte_end":44467,"line_start":18,"line_end":18,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/mod.rs","byte_start":44899,"byte_end":44905,"line_start":42,"line_end":42,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/mod.rs","byte_start":45483,"byte_end":45494,"line_start":71,"line_end":71,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/mod.rs","byte_start":45685,"byte_end":45695,"line_start":83,"line_end":83,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/mod.rs","byte_start":45901,"byte_end":45909,"line_start":97,"line_end":97,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/mod.rs","byte_start":46163,"byte_end":46166,"line_start":108,"line_end":108,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/lib.rs","byte_start":1805,"byte_end":1811,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":33}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/rzcobs.rs","byte_start":18114,"byte_end":18121,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":8},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/encoding/mod.rs","byte_start":15869,"byte_end":15876,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":23},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37268,"byte_end":37277,"line_start":42,"line_end":42,"column_start":17,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":508},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37705,"byte_end":37711,"line_start":64,"line_end":64,"column_start":24,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":45483},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/traits.rs","byte_start":37893,"byte_end":37899,"line_start":74,"line_end":74,"column_start":27,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":45610},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/export/mod.rs","byte_start":35863,"byte_end":35871,"line_start":219,"line_end":219,"column_start":27,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":139},"to":{"krate":1,"index":9519}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":40118,"byte_end":40130,"line_start":27,"line_end":27,"column_start":41,"column_end":53},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":170},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/adapter.rs","byte_start":41368,"byte_end":41382,"line_start":65,"line_end":65,"column_start":43,"column_end":57},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":179},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/alloc_.rs","byte_start":46353,"byte_end":46359,"line_start":5,"line_end":5,"column_start":24,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":48320},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/array.rs","byte_start":46615,"byte_end":46632,"line_start":5,"line_end":5,"column_start":24,"column_end":41},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":44200},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/cell.rs","byte_start":46782,"byte_end":46786,"line_start":3,"line_end":3,"column_start":32,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":4393},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/cell.rs","byte_start":46965,"byte_end":46972,"line_start":12,"line_end":12,"column_start":32,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":1,"index":4458},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/cell.rs","byte_start":47465,"byte_end":47476,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"kind":{"Impl":{"id":32}},"from":{"krate":1,"index":4462},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/cell.rs","byte_start":47597,"byte_end":47611,"line_start":42,"line_end":42,"column_start":29,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":1,"index":4467},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/num.rs","byte_start":48451,"byte_end":48466,"line_start":28,"line_end":28,"column_start":22,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":23191},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/ops.rs","byte_start":48615,"byte_end":48620,"line_start":3,"line_end":3,"column_start":33,"column_end":38},"kind":{"Impl":{"id":47}},"from":{"krate":1,"index":43993},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/ops.rs","byte_start":48790,"byte_end":48799,"line_start":12,"line_end":12,"column_start":33,"column_end":42},"kind":{"Impl":{"id":48}},"from":{"krate":1,"index":44018},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/ops.rs","byte_start":48952,"byte_end":48961,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"kind":{"Impl":{"id":49}},"from":{"krate":1,"index":43977},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/ops.rs","byte_start":49078,"byte_end":49092,"line_start":27,"line_end":27,"column_start":33,"column_end":47},"kind":{"Impl":{"id":50}},"from":{"krate":1,"index":44062},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/ops.rs","byte_start":49267,"byte_end":49274,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":1,"index":44039},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/ops.rs","byte_start":49430,"byte_end":49446,"line_start":45,"line_end":45,"column_start":33,"column_end":49},"kind":{"Impl":{"id":52}},"from":{"krate":1,"index":44085},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/slice.rs","byte_start":49626,"byte_end":49637,"line_start":3,"line_end":3,"column_start":41,"column_end":52},"kind":{"Impl":{"id":53}},"from":{"krate":1,"index":47192},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/slice.rs","byte_start":49802,"byte_end":49806,"line_start":12,"line_end":12,"column_start":41,"column_end":45},"kind":{"Impl":{"id":54}},"from":{"krate":1,"index":10338},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/slice.rs","byte_start":50056,"byte_end":50063,"line_start":25,"line_end":25,"column_start":41,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":1,"index":47165},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/mod.rs","byte_start":44461,"byte_end":44467,"line_start":18,"line_end":18,"column_start":20,"column_end":26},"kind":{"Impl":{"id":56}},"from":{"krate":1,"index":45483},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/mod.rs","byte_start":44899,"byte_end":44905,"line_start":42,"line_end":42,"column_start":23,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":1,"index":45610},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/mod.rs","byte_start":45483,"byte_end":45494,"line_start":71,"line_end":71,"column_start":34,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":1,"index":3041},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/mod.rs","byte_start":45685,"byte_end":45695,"line_start":83,"line_end":83,"column_start":32,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":1,"index":36925},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/mod.rs","byte_start":45901,"byte_end":45909,"line_start":97,"line_end":97,"column_start":29,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":1,"index":48105},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/udayakumar/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.1/src/impls/core_/mod.rs","byte_start":46163,"byte_end":46166,"line_start":108,"line_end":108,"column_start":35,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":1,"index":44790},"to":{"krate":0,"index":352}}]}